version: '2.3'

services:
  # Start API Proxy
  api:
    image: avenues
    build:
      context: ./ext/services
    ports:
      - 4567:4567
    networks:
      - exposed_network
      - services_network

  # Start DB
  postgres:
    image: testdb
    build:
      context: ./ext/db
    ports:
      - 5432:5432
    networks:
      - database_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 30s

  # Start Janice
  janice:
    image: 988006926515.dkr.ecr.us-east-1.amazonaws.com/ionchannel/janice:latest
    env_file: ./ext/services/janice_env.test
    networks:
      - database_network
      - services_network
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "http://localhost:4567/v1/status"]
      interval: 5s
      timeout: 30s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      waldorf:
        condition: service_started

  # Start Sweetums
  sweetums:
    image: 988006926515.dkr.ecr.us-east-1.amazonaws.com/ionchannel/sweetums:latest
    env_file: ./ext/services/sweetums_env.test
    ports:
      - 4000:4000
    networks:
      - services_network
    healthcheck:
      test: ["CMD", "/probe", "-kv", "https://localhost:4000/v1/status"]
      interval: 5s
      timeout: 30s
      retries: 5

  # Start Waldorf
  waldorf:
    image: 988006926515.dkr.ecr.us-east-1.amazonaws.com/ionchannel/waldorf:latest
    env_file: ./ext/services/waldorf_env.test
    networks:
      - database_network
      - services_network
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "http://localhost:4567/v1/status"]
      interval: 5s
      timeout: 30s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

  # Start Yolanda
  yolanda:
    image: 988006926515.dkr.ecr.us-east-1.amazonaws.com/ionchannel/yolanda:latest
    env_file: ./ext/services/yolanda_env.test
    networks:
      database_network: {}
      services_network:
        aliases:
          - yolanda.ionchannel.testing
    healthcheck:
      test: ["CMD", "/probe", "-kv", "https://localhost:4567/v1/status"]
      interval: 5s
      timeout: 30s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

  # Start Animal
  animal:
    image: 988006926515.dkr.ecr.us-east-1.amazonaws.com/ionchannel/animal:latest
    env_file: ./ext/services/animal_env.test
    networks:
      database_network: {}
      services_network:
        aliases:
          - animal.ionchannel.testing
    healthcheck:
      test: ["CMD", "/probe", "-kv", "https://localhost:4567/v1/status"]
      interval: 5s
      timeout: 30s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

  # Start Kermit
  kermit:
    image: 988006926515.dkr.ecr.us-east-1.amazonaws.com/ionchannel/kermit:latest
    env_file: ./ext/services/kermit_env.test
    networks:
      - database_network
      - services_network
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "http://localhost:4567/v1/status"]
      interval: 5s
      timeout: 30s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      elasticmq:
        condition: service_started


  # Start Statler
  statler:
    image: 988006926515.dkr.ecr.us-east-1.amazonaws.com/ionchannel/statler:latest
    env_file: ./ext/services/statler_env.test
    networks:
      database_network: {}
      services_network:
        aliases:
          - statler.ionchannel.testing
    healthcheck:
      test: ["CMD", "/probe", "-kv", "https://localhost:4567/v1/status"]
      interval: 5s
      timeout: 30s
      retries: 5
    depends_on:
      animal:
        condition: service_healthy
      janice:
        condition: service_healthy
      waldorf:
        condition: service_healthy
      yolanda:
        condition: service_healthy

  # Start Bunsen
  bunsen:
    image: 988006926515.dkr.ecr.us-east-1.amazonaws.com/ionchannel/bunsen:latest
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    env_file: ./ext/services/bunsen_env.test
    networks:
      - database_network
      - services_network
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "http://localhost:4567/v1/status"]
      interval: 8s
      timeout: 30s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

  # Start Rosita
  rosita:
    image: 988006926515.dkr.ecr.us-east-1.amazonaws.com/ionchannel/rosita:latest
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    env_file: ./ext/services/rosita_env.test
    networks:
      - database_network
      - services_network
    healthcheck:
      test: ["CMD", "/probe", "-kv", "http://localhost:4567/v1/status"]
      interval: 8s
      timeout: 30s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

  # Start ElasticMQ
  elasticmq:
    image: 988006926515.dkr.ecr.us-east-1.amazonaws.com/ionchannel/elasticmq:latest
    networks:
      - services_network

networks:
  exposed_network:
    internal: false
  services_network:
    internal: false
  database_network:
    internal: false
